### YamlMime:ManagedReference
items:
- uid: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping
  commentId: T:MigrationApp.Core.Hooks.Mappings.EmailDomainMapping
  id: EmailDomainMapping
  parent: MigrationApp.Core.Hooks.Mappings
  children:
  - MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.#ctor(Microsoft.Extensions.Options.IOptions{MigrationApp.Core.Hooks.Mappings.EmailDomainMappingOptions},Tableau.Migration.Resources.ISharedResourcesLocalizer,Microsoft.Extensions.Logging.ILogger{MigrationApp.Core.Hooks.Mappings.EmailDomainMapping})
  - MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: EmailDomainMapping
  nameWithType: EmailDomainMapping
  fullName: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping
  type: Class
  source:
    remote:
      path: src/MigrationApp.Core/Hooks/Mappings/EmailDomainMapping.cs
      branch: lsz/docs
      repo: git@github.com:Bit-Quill/tableau-esmb-migration-app.git
    id: EmailDomainMapping
    path: ../src/MigrationApp.Core/Hooks/Mappings/EmailDomainMapping.cs
    startLine: 12
  assemblies:
  - MigrationApp.Core
  namespace: MigrationApp.Core.Hooks.Mappings
  summary: Mapping that appends an email domain to a username.
  example: []
  syntax:
    content: 'public class EmailDomainMapping : ContentMappingBase<IUser>, ITableauCloudUsernameMapping, IContentMapping<IUser>, IMigrationHook<ContentMappingContext<IUser>>'
    content.vb: Public Class EmailDomainMapping Inherits ContentMappingBase(Of IUser) Implements ITableauCloudUsernameMapping, IContentMapping(Of IUser), IMigrationHook(Of ContentMappingContext(Of IUser))
  inheritance:
  - System.Object
  - Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}
  implements:
  - Tableau.Migration.Engine.Hooks.Mappings.Default.ITableauCloudUsernameMapping
  - Tableau.Migration.Engine.Hooks.Mappings.IContentMapping{Tableau.Migration.Content.IUser}
  - Tableau.Migration.Engine.Hooks.IMigrationHook{Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser}}
  inheritedMembers:
  - Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}.ExecuteAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser},System.Threading.CancellationToken)
  - Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}.Localizer
  - Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}.Logger
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.#ctor(Microsoft.Extensions.Options.IOptions{MigrationApp.Core.Hooks.Mappings.EmailDomainMappingOptions},Tableau.Migration.Resources.ISharedResourcesLocalizer,Microsoft.Extensions.Logging.ILogger{MigrationApp.Core.Hooks.Mappings.EmailDomainMapping})
  commentId: M:MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.#ctor(Microsoft.Extensions.Options.IOptions{MigrationApp.Core.Hooks.Mappings.EmailDomainMappingOptions},Tableau.Migration.Resources.ISharedResourcesLocalizer,Microsoft.Extensions.Logging.ILogger{MigrationApp.Core.Hooks.Mappings.EmailDomainMapping})
  id: '#ctor(Microsoft.Extensions.Options.IOptions{MigrationApp.Core.Hooks.Mappings.EmailDomainMappingOptions},Tableau.Migration.Resources.ISharedResourcesLocalizer,Microsoft.Extensions.Logging.ILogger{MigrationApp.Core.Hooks.Mappings.EmailDomainMapping})'
  parent: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping
  langs:
  - csharp
  - vb
  name: EmailDomainMapping(IOptions<EmailDomainMappingOptions>, ISharedResourcesLocalizer, ILogger<EmailDomainMapping>)
  nameWithType: EmailDomainMapping.EmailDomainMapping(IOptions<EmailDomainMappingOptions>, ISharedResourcesLocalizer, ILogger<EmailDomainMapping>)
  fullName: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.EmailDomainMapping(Microsoft.Extensions.Options.IOptions<MigrationApp.Core.Hooks.Mappings.EmailDomainMappingOptions>, Tableau.Migration.Resources.ISharedResourcesLocalizer, Microsoft.Extensions.Logging.ILogger<MigrationApp.Core.Hooks.Mappings.EmailDomainMapping>)
  type: Constructor
  source:
    remote:
      path: src/MigrationApp.Core/Hooks/Mappings/EmailDomainMapping.cs
      branch: lsz/docs
      repo: git@github.com:Bit-Quill/tableau-esmb-migration-app.git
    id: .ctor
    path: ../src/MigrationApp.Core/Hooks/Mappings/EmailDomainMapping.cs
    startLine: 25
  assemblies:
  - MigrationApp.Core
  namespace: MigrationApp.Core.Hooks.Mappings
  summary: Creates a new <xref href="MigrationApp.Core.Hooks.Mappings.EmailDomainMapping" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public EmailDomainMapping(IOptions<EmailDomainMappingOptions> options, ISharedResourcesLocalizer localizer, ILogger<EmailDomainMapping> logger)
    parameters:
    - id: options
      type: Microsoft.Extensions.Options.IOptions{MigrationApp.Core.Hooks.Mappings.EmailDomainMappingOptions}
      description: The options for this Mapping.
    - id: localizer
      type: Tableau.Migration.Resources.ISharedResourcesLocalizer
      description: The localizer for this Mapping.
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{MigrationApp.Core.Hooks.Mappings.EmailDomainMapping}
      description: The logger for this Mapping.
    content.vb: Public Sub New(options As IOptions(Of EmailDomainMappingOptions), localizer As ISharedResourcesLocalizer, logger As ILogger(Of EmailDomainMapping))
  overload: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.#ctor*
  nameWithType.vb: EmailDomainMapping.New(IOptions(Of EmailDomainMappingOptions), ISharedResourcesLocalizer, ILogger(Of EmailDomainMapping))
  fullName.vb: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.New(Microsoft.Extensions.Options.IOptions(Of MigrationApp.Core.Hooks.Mappings.EmailDomainMappingOptions), Tableau.Migration.Resources.ISharedResourcesLocalizer, Microsoft.Extensions.Logging.ILogger(Of MigrationApp.Core.Hooks.Mappings.EmailDomainMapping))
  name.vb: New(IOptions(Of EmailDomainMappingOptions), ISharedResourcesLocalizer, ILogger(Of EmailDomainMapping))
- uid: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser},System.Threading.CancellationToken)
  commentId: M:MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser},System.Threading.CancellationToken)
  id: MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser},System.Threading.CancellationToken)
  parent: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping
  langs:
  - csharp
  - vb
  name: MapAsync(ContentMappingContext<IUser>, CancellationToken)
  nameWithType: EmailDomainMapping.MapAsync(ContentMappingContext<IUser>, CancellationToken)
  fullName: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext<Tableau.Migration.Content.IUser>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/MigrationApp.Core/Hooks/Mappings/EmailDomainMapping.cs
      branch: lsz/docs
      repo: git@github.com:Bit-Quill/tableau-esmb-migration-app.git
    id: MapAsync
    path: ../src/MigrationApp.Core/Hooks/Mappings/EmailDomainMapping.cs
    startLine: 38
  assemblies:
  - MigrationApp.Core
  namespace: MigrationApp.Core.Hooks.Mappings
  summary: >-
    Adds an email to the user if it doesn't exist.

    This is where the main logic of the mapping should reside.
  example: []
  syntax:
    content: public override Task<ContentMappingContext<IUser>?> MapAsync(ContentMappingContext<IUser> userMappingContext, CancellationToken cancel)
    parameters:
    - id: userMappingContext
      type: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser}
    - id: cancel
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser}}
    content.vb: Public Overrides Function MapAsync(userMappingContext As ContentMappingContext(Of IUser), cancel As CancellationToken) As Task(Of ContentMappingContext(Of IUser))
  overridden: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}.MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser},System.Threading.CancellationToken)
  overload: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.MapAsync*
  nameWithType.vb: EmailDomainMapping.MapAsync(ContentMappingContext(Of IUser), CancellationToken)
  fullName.vb: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext(Of Tableau.Migration.Content.IUser), System.Threading.CancellationToken)
  name.vb: MapAsync(ContentMappingContext(Of IUser), CancellationToken)
references:
- uid: MigrationApp.Core.Hooks.Mappings
  commentId: N:MigrationApp.Core.Hooks.Mappings
  href: MigrationApp.html
  name: MigrationApp.Core.Hooks.Mappings
  nameWithType: MigrationApp.Core.Hooks.Mappings
  fullName: MigrationApp.Core.Hooks.Mappings
  spec.csharp:
  - uid: MigrationApp
    name: MigrationApp
    href: MigrationApp.html
  - name: .
  - uid: MigrationApp.Core
    name: Core
    href: MigrationApp.Core.html
  - name: .
  - uid: MigrationApp.Core.Hooks
    name: Hooks
    href: MigrationApp.Core.Hooks.html
  - name: .
  - uid: MigrationApp.Core.Hooks.Mappings
    name: Mappings
    href: MigrationApp.Core.Hooks.Mappings.html
  spec.vb:
  - uid: MigrationApp
    name: MigrationApp
    href: MigrationApp.html
  - name: .
  - uid: MigrationApp.Core
    name: Core
    href: MigrationApp.Core.html
  - name: .
  - uid: MigrationApp.Core.Hooks
    name: Hooks
    href: MigrationApp.Core.Hooks.html
  - name: .
  - uid: MigrationApp.Core.Hooks.Mappings
    name: Mappings
    href: MigrationApp.Core.Hooks.Mappings.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}
  commentId: T:Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}
  parent: Tableau.Migration.Engine.Hooks.Mappings
  definition: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1
  name: ContentMappingBase<IUser>
  nameWithType: ContentMappingBase<IUser>
  fullName: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase<Tableau.Migration.Content.IUser>
  nameWithType.vb: ContentMappingBase(Of IUser)
  fullName.vb: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase(Of Tableau.Migration.Content.IUser)
  name.vb: ContentMappingBase(Of IUser)
  spec.csharp:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1
    name: ContentMappingBase
    isExternal: true
  - name: <
  - uid: Tableau.Migration.Content.IUser
    name: IUser
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1
    name: ContentMappingBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Tableau.Migration.Content.IUser
    name: IUser
    isExternal: true
  - name: )
- uid: Tableau.Migration.Engine.Hooks.Mappings.Default.ITableauCloudUsernameMapping
  commentId: T:Tableau.Migration.Engine.Hooks.Mappings.Default.ITableauCloudUsernameMapping
  parent: Tableau.Migration.Engine.Hooks.Mappings.Default
  isExternal: true
  name: ITableauCloudUsernameMapping
  nameWithType: ITableauCloudUsernameMapping
  fullName: Tableau.Migration.Engine.Hooks.Mappings.Default.ITableauCloudUsernameMapping
- uid: Tableau.Migration.Engine.Hooks.Mappings.IContentMapping{Tableau.Migration.Content.IUser}
  commentId: T:Tableau.Migration.Engine.Hooks.Mappings.IContentMapping{Tableau.Migration.Content.IUser}
  parent: Tableau.Migration.Engine.Hooks.Mappings
  definition: Tableau.Migration.Engine.Hooks.Mappings.IContentMapping`1
  name: IContentMapping<IUser>
  nameWithType: IContentMapping<IUser>
  fullName: Tableau.Migration.Engine.Hooks.Mappings.IContentMapping<Tableau.Migration.Content.IUser>
  nameWithType.vb: IContentMapping(Of IUser)
  fullName.vb: Tableau.Migration.Engine.Hooks.Mappings.IContentMapping(Of Tableau.Migration.Content.IUser)
  name.vb: IContentMapping(Of IUser)
  spec.csharp:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.IContentMapping`1
    name: IContentMapping
    isExternal: true
  - name: <
  - uid: Tableau.Migration.Content.IUser
    name: IUser
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.IContentMapping`1
    name: IContentMapping
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Tableau.Migration.Content.IUser
    name: IUser
    isExternal: true
  - name: )
- uid: Tableau.Migration.Engine.Hooks.IMigrationHook{Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser}}
  commentId: T:Tableau.Migration.Engine.Hooks.IMigrationHook{Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser}}
  parent: Tableau.Migration.Engine.Hooks
  definition: Tableau.Migration.Engine.Hooks.IMigrationHook`1
  name: IMigrationHook<ContentMappingContext<IUser>>
  nameWithType: IMigrationHook<ContentMappingContext<IUser>>
  fullName: Tableau.Migration.Engine.Hooks.IMigrationHook<Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext<Tableau.Migration.Content.IUser>>
  nameWithType.vb: IMigrationHook(Of ContentMappingContext(Of IUser))
  fullName.vb: Tableau.Migration.Engine.Hooks.IMigrationHook(Of Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext(Of Tableau.Migration.Content.IUser))
  name.vb: IMigrationHook(Of ContentMappingContext(Of IUser))
  spec.csharp:
  - uid: Tableau.Migration.Engine.Hooks.IMigrationHook`1
    name: IMigrationHook
    isExternal: true
  - name: <
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
    name: ContentMappingContext
    isExternal: true
  - name: <
  - uid: Tableau.Migration.Content.IUser
    name: IUser
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Tableau.Migration.Engine.Hooks.IMigrationHook`1
    name: IMigrationHook
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
    name: ContentMappingContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Tableau.Migration.Content.IUser
    name: IUser
    isExternal: true
  - name: )
  - name: )
- uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}.ExecuteAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser},System.Threading.CancellationToken)
  commentId: M:Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}.ExecuteAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser},System.Threading.CancellationToken)
  parent: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}
  definition: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1.ExecuteAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{`0},System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ExecuteAsync(ContentMappingContext<IUser>, CancellationToken)
  nameWithType: ContentMappingBase<IUser>.ExecuteAsync(ContentMappingContext<IUser>, CancellationToken)
  fullName: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase<Tableau.Migration.Content.IUser>.ExecuteAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext<Tableau.Migration.Content.IUser>, System.Threading.CancellationToken)
  nameWithType.vb: ContentMappingBase(Of IUser).ExecuteAsync(ContentMappingContext(Of IUser), CancellationToken)
  fullName.vb: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase(Of Tableau.Migration.Content.IUser).ExecuteAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext(Of Tableau.Migration.Content.IUser), System.Threading.CancellationToken)
  name.vb: ExecuteAsync(ContentMappingContext(Of IUser), CancellationToken)
  spec.csharp:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}.ExecuteAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser},System.Threading.CancellationToken)
    name: ExecuteAsync
    isExternal: true
  - name: (
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
    name: ContentMappingContext
    isExternal: true
  - name: <
  - uid: Tableau.Migration.Content.IUser
    name: IUser
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}.ExecuteAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser},System.Threading.CancellationToken)
    name: ExecuteAsync
    isExternal: true
  - name: (
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
    name: ContentMappingContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Tableau.Migration.Content.IUser
    name: IUser
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}.Localizer
  commentId: P:Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}.Localizer
  parent: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}
  definition: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1.Localizer
  name: Localizer
  nameWithType: ContentMappingBase<IUser>.Localizer
  fullName: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase<Tableau.Migration.Content.IUser>.Localizer
  nameWithType.vb: ContentMappingBase(Of IUser).Localizer
  fullName.vb: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase(Of Tableau.Migration.Content.IUser).Localizer
- uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}.Logger
  commentId: P:Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}.Logger
  parent: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}
  definition: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1.Logger
  name: Logger
  nameWithType: ContentMappingBase<IUser>.Logger
  fullName: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase<Tableau.Migration.Content.IUser>.Logger
  nameWithType.vb: ContentMappingBase(Of IUser).Logger
  fullName.vb: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase(Of Tableau.Migration.Content.IUser).Logger
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1
  commentId: T:Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1
  isExternal: true
  name: ContentMappingBase<TContent>
  nameWithType: ContentMappingBase<TContent>
  fullName: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase<TContent>
  nameWithType.vb: ContentMappingBase(Of TContent)
  fullName.vb: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase(Of TContent)
  name.vb: ContentMappingBase(Of TContent)
  spec.csharp:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1
    name: ContentMappingBase
    isExternal: true
  - name: <
  - name: TContent
  - name: '>'
  spec.vb:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1
    name: ContentMappingBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TContent
  - name: )
- uid: Tableau.Migration.Engine.Hooks.Mappings
  commentId: N:Tableau.Migration.Engine.Hooks.Mappings
  isExternal: true
  name: Tableau.Migration.Engine.Hooks.Mappings
  nameWithType: Tableau.Migration.Engine.Hooks.Mappings
  fullName: Tableau.Migration.Engine.Hooks.Mappings
  spec.csharp:
  - uid: Tableau
    name: Tableau
    isExternal: true
  - name: .
  - uid: Tableau.Migration
    name: Migration
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine
    name: Engine
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine.Hooks
    name: Hooks
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine.Hooks.Mappings
    name: Mappings
    isExternal: true
  spec.vb:
  - uid: Tableau
    name: Tableau
    isExternal: true
  - name: .
  - uid: Tableau.Migration
    name: Migration
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine
    name: Engine
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine.Hooks
    name: Hooks
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine.Hooks.Mappings
    name: Mappings
    isExternal: true
- uid: Tableau.Migration.Engine.Hooks.Mappings.Default
  commentId: N:Tableau.Migration.Engine.Hooks.Mappings.Default
  isExternal: true
  name: Tableau.Migration.Engine.Hooks.Mappings.Default
  nameWithType: Tableau.Migration.Engine.Hooks.Mappings.Default
  fullName: Tableau.Migration.Engine.Hooks.Mappings.Default
  spec.csharp:
  - uid: Tableau
    name: Tableau
    isExternal: true
  - name: .
  - uid: Tableau.Migration
    name: Migration
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine
    name: Engine
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine.Hooks
    name: Hooks
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine.Hooks.Mappings
    name: Mappings
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine.Hooks.Mappings.Default
    name: Default
    isExternal: true
  spec.vb:
  - uid: Tableau
    name: Tableau
    isExternal: true
  - name: .
  - uid: Tableau.Migration
    name: Migration
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine
    name: Engine
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine.Hooks
    name: Hooks
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine.Hooks.Mappings
    name: Mappings
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine.Hooks.Mappings.Default
    name: Default
    isExternal: true
- uid: Tableau.Migration.Engine.Hooks.Mappings.IContentMapping`1
  commentId: T:Tableau.Migration.Engine.Hooks.Mappings.IContentMapping`1
  isExternal: true
  name: IContentMapping<TContent>
  nameWithType: IContentMapping<TContent>
  fullName: Tableau.Migration.Engine.Hooks.Mappings.IContentMapping<TContent>
  nameWithType.vb: IContentMapping(Of TContent)
  fullName.vb: Tableau.Migration.Engine.Hooks.Mappings.IContentMapping(Of TContent)
  name.vb: IContentMapping(Of TContent)
  spec.csharp:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.IContentMapping`1
    name: IContentMapping
    isExternal: true
  - name: <
  - name: TContent
  - name: '>'
  spec.vb:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.IContentMapping`1
    name: IContentMapping
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TContent
  - name: )
- uid: Tableau.Migration.Engine.Hooks.IMigrationHook`1
  commentId: T:Tableau.Migration.Engine.Hooks.IMigrationHook`1
  isExternal: true
  name: IMigrationHook<TContext>
  nameWithType: IMigrationHook<TContext>
  fullName: Tableau.Migration.Engine.Hooks.IMigrationHook<TContext>
  nameWithType.vb: IMigrationHook(Of TContext)
  fullName.vb: Tableau.Migration.Engine.Hooks.IMigrationHook(Of TContext)
  name.vb: IMigrationHook(Of TContext)
  spec.csharp:
  - uid: Tableau.Migration.Engine.Hooks.IMigrationHook`1
    name: IMigrationHook
    isExternal: true
  - name: <
  - name: TContext
  - name: '>'
  spec.vb:
  - uid: Tableau.Migration.Engine.Hooks.IMigrationHook`1
    name: IMigrationHook
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TContext
  - name: )
- uid: Tableau.Migration.Engine.Hooks
  commentId: N:Tableau.Migration.Engine.Hooks
  isExternal: true
  name: Tableau.Migration.Engine.Hooks
  nameWithType: Tableau.Migration.Engine.Hooks
  fullName: Tableau.Migration.Engine.Hooks
  spec.csharp:
  - uid: Tableau
    name: Tableau
    isExternal: true
  - name: .
  - uid: Tableau.Migration
    name: Migration
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine
    name: Engine
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine.Hooks
    name: Hooks
    isExternal: true
  spec.vb:
  - uid: Tableau
    name: Tableau
    isExternal: true
  - name: .
  - uid: Tableau.Migration
    name: Migration
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine
    name: Engine
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Engine.Hooks
    name: Hooks
    isExternal: true
- uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1.ExecuteAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{`0},System.Threading.CancellationToken)
  commentId: M:Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1.ExecuteAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{`0},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ExecuteAsync(ContentMappingContext<TContent>, CancellationToken)
  nameWithType: ContentMappingBase<TContent>.ExecuteAsync(ContentMappingContext<TContent>, CancellationToken)
  fullName: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase<TContent>.ExecuteAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext<TContent>, System.Threading.CancellationToken)
  nameWithType.vb: ContentMappingBase(Of TContent).ExecuteAsync(ContentMappingContext(Of TContent), CancellationToken)
  fullName.vb: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase(Of TContent).ExecuteAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext(Of TContent), System.Threading.CancellationToken)
  name.vb: ExecuteAsync(ContentMappingContext(Of TContent), CancellationToken)
  spec.csharp:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1.ExecuteAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{`0},System.Threading.CancellationToken)
    name: ExecuteAsync
    isExternal: true
  - name: (
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
    name: ContentMappingContext
    isExternal: true
  - name: <
  - name: TContent
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1.ExecuteAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{`0},System.Threading.CancellationToken)
    name: ExecuteAsync
    isExternal: true
  - name: (
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
    name: ContentMappingContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TContent
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1.Localizer
  commentId: P:Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1.Localizer
  isExternal: true
  name: Localizer
  nameWithType: ContentMappingBase<TContent>.Localizer
  fullName: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase<TContent>.Localizer
  nameWithType.vb: ContentMappingBase(Of TContent).Localizer
  fullName.vb: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase(Of TContent).Localizer
- uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1.Logger
  commentId: P:Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1.Logger
  isExternal: true
  name: Logger
  nameWithType: ContentMappingBase<TContent>.Logger
  fullName: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase<TContent>.Logger
  nameWithType.vb: ContentMappingBase(Of TContent).Logger
  fullName.vb: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase(Of TContent).Logger
- uid: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping
  commentId: T:MigrationApp.Core.Hooks.Mappings.EmailDomainMapping
  href: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.html
  name: EmailDomainMapping
  nameWithType: EmailDomainMapping
  fullName: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping
- uid: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.#ctor*
  commentId: Overload:MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.#ctor
  href: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.html#MigrationApp_Core_Hooks_Mappings_EmailDomainMapping__ctor_Microsoft_Extensions_Options_IOptions_MigrationApp_Core_Hooks_Mappings_EmailDomainMappingOptions__Tableau_Migration_Resources_ISharedResourcesLocalizer_Microsoft_Extensions_Logging_ILogger_MigrationApp_Core_Hooks_Mappings_EmailDomainMapping__
  name: EmailDomainMapping
  nameWithType: EmailDomainMapping.EmailDomainMapping
  fullName: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.EmailDomainMapping
  nameWithType.vb: EmailDomainMapping.New
  fullName.vb: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.New
  name.vb: New
- uid: Microsoft.Extensions.Options.IOptions{MigrationApp.Core.Hooks.Mappings.EmailDomainMappingOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{MigrationApp.Core.Hooks.Mappings.EmailDomainMappingOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.options.ioptions-1
  name: IOptions<EmailDomainMappingOptions>
  nameWithType: IOptions<EmailDomainMappingOptions>
  fullName: Microsoft.Extensions.Options.IOptions<MigrationApp.Core.Hooks.Mappings.EmailDomainMappingOptions>
  nameWithType.vb: IOptions(Of EmailDomainMappingOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of MigrationApp.Core.Hooks.Mappings.EmailDomainMappingOptions)
  name.vb: IOptions(Of EmailDomainMappingOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.options.ioptions-1
  - name: <
  - uid: MigrationApp.Core.Hooks.Mappings.EmailDomainMappingOptions
    name: EmailDomainMappingOptions
    href: MigrationApp.Core.Hooks.Mappings.EmailDomainMappingOptions.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.options.ioptions-1
  - name: (
  - name: Of
  - name: " "
  - uid: MigrationApp.Core.Hooks.Mappings.EmailDomainMappingOptions
    name: EmailDomainMappingOptions
    href: MigrationApp.Core.Hooks.Mappings.EmailDomainMappingOptions.html
  - name: )
- uid: Tableau.Migration.Resources.ISharedResourcesLocalizer
  commentId: T:Tableau.Migration.Resources.ISharedResourcesLocalizer
  parent: Tableau.Migration.Resources
  isExternal: true
  name: ISharedResourcesLocalizer
  nameWithType: ISharedResourcesLocalizer
  fullName: Tableau.Migration.Resources.ISharedResourcesLocalizer
- uid: Microsoft.Extensions.Logging.ILogger{MigrationApp.Core.Hooks.Mappings.EmailDomainMapping}
  commentId: T:Microsoft.Extensions.Logging.ILogger{MigrationApp.Core.Hooks.Mappings.EmailDomainMapping}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<EmailDomainMapping>
  nameWithType: ILogger<EmailDomainMapping>
  fullName: Microsoft.Extensions.Logging.ILogger<MigrationApp.Core.Hooks.Mappings.EmailDomainMapping>
  nameWithType.vb: ILogger(Of EmailDomainMapping)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of MigrationApp.Core.Hooks.Mappings.EmailDomainMapping)
  name.vb: ILogger(Of EmailDomainMapping)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping
    name: EmailDomainMapping
    href: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping
    name: EmailDomainMapping
    href: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.html
  - name: )
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.options.ioptions-1
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.options.ioptions-1
  - name: <
  - name: TOptions
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.options.ioptions-1
  - name: (
  - name: Of
  - name: " "
  - name: TOptions
  - name: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Options
    name: Options
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.options
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Options
    name: Options
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.options
- uid: Tableau.Migration.Resources
  commentId: N:Tableau.Migration.Resources
  isExternal: true
  name: Tableau.Migration.Resources
  nameWithType: Tableau.Migration.Resources
  fullName: Tableau.Migration.Resources
  spec.csharp:
  - uid: Tableau
    name: Tableau
    isExternal: true
  - name: .
  - uid: Tableau.Migration
    name: Migration
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Resources
    name: Resources
    isExternal: true
  spec.vb:
  - uid: Tableau
    name: Tableau
    isExternal: true
  - name: .
  - uid: Tableau.Migration
    name: Migration
    isExternal: true
  - name: .
  - uid: Tableau.Migration.Resources
    name: Resources
    isExternal: true
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}.MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser},System.Threading.CancellationToken)
  commentId: M:Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}.MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser},System.Threading.CancellationToken)
  parent: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}
  definition: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1.MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{`0},System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: MapAsync(ContentMappingContext<IUser>, CancellationToken)
  nameWithType: ContentMappingBase<IUser>.MapAsync(ContentMappingContext<IUser>, CancellationToken)
  fullName: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase<Tableau.Migration.Content.IUser>.MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext<Tableau.Migration.Content.IUser>, System.Threading.CancellationToken)
  nameWithType.vb: ContentMappingBase(Of IUser).MapAsync(ContentMappingContext(Of IUser), CancellationToken)
  fullName.vb: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase(Of Tableau.Migration.Content.IUser).MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext(Of Tableau.Migration.Content.IUser), System.Threading.CancellationToken)
  name.vb: MapAsync(ContentMappingContext(Of IUser), CancellationToken)
  spec.csharp:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}.MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser},System.Threading.CancellationToken)
    name: MapAsync
    isExternal: true
  - name: (
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
    name: ContentMappingContext
    isExternal: true
  - name: <
  - uid: Tableau.Migration.Content.IUser
    name: IUser
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase{Tableau.Migration.Content.IUser}.MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser},System.Threading.CancellationToken)
    name: MapAsync
    isExternal: true
  - name: (
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
    name: ContentMappingContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Tableau.Migration.Content.IUser
    name: IUser
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.MapAsync*
  commentId: Overload:MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.MapAsync
  href: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.html#MigrationApp_Core_Hooks_Mappings_EmailDomainMapping_MapAsync_Tableau_Migration_Engine_Hooks_Mappings_ContentMappingContext_Tableau_Migration_Content_IUser__System_Threading_CancellationToken_
  name: MapAsync
  nameWithType: EmailDomainMapping.MapAsync
  fullName: MigrationApp.Core.Hooks.Mappings.EmailDomainMapping.MapAsync
- uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser}
  commentId: T:Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser}
  parent: Tableau.Migration.Engine.Hooks.Mappings
  definition: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
  name: ContentMappingContext<IUser>
  nameWithType: ContentMappingContext<IUser>
  fullName: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext<Tableau.Migration.Content.IUser>
  nameWithType.vb: ContentMappingContext(Of IUser)
  fullName.vb: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext(Of Tableau.Migration.Content.IUser)
  name.vb: ContentMappingContext(Of IUser)
  spec.csharp:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
    name: ContentMappingContext
    isExternal: true
  - name: <
  - uid: Tableau.Migration.Content.IUser
    name: IUser
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
    name: ContentMappingContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Tableau.Migration.Content.IUser
    name: IUser
    isExternal: true
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser}}
  commentId: T:System.Threading.Tasks.Task{Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{Tableau.Migration.Content.IUser}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ContentMappingContext<IUser>>
  nameWithType: Task<ContentMappingContext<IUser>>
  fullName: System.Threading.Tasks.Task<Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext<Tableau.Migration.Content.IUser>>
  nameWithType.vb: Task(Of ContentMappingContext(Of IUser))
  fullName.vb: System.Threading.Tasks.Task(Of Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext(Of Tableau.Migration.Content.IUser))
  name.vb: Task(Of ContentMappingContext(Of IUser))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
    name: ContentMappingContext
    isExternal: true
  - name: <
  - uid: Tableau.Migration.Content.IUser
    name: IUser
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
    name: ContentMappingContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Tableau.Migration.Content.IUser
    name: IUser
    isExternal: true
  - name: )
  - name: )
- uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1.MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{`0},System.Threading.CancellationToken)
  commentId: M:Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1.MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{`0},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: MapAsync(ContentMappingContext<TContent>, CancellationToken)
  nameWithType: ContentMappingBase<TContent>.MapAsync(ContentMappingContext<TContent>, CancellationToken)
  fullName: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase<TContent>.MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext<TContent>, System.Threading.CancellationToken)
  nameWithType.vb: ContentMappingBase(Of TContent).MapAsync(ContentMappingContext(Of TContent), CancellationToken)
  fullName.vb: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase(Of TContent).MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext(Of TContent), System.Threading.CancellationToken)
  name.vb: MapAsync(ContentMappingContext(Of TContent), CancellationToken)
  spec.csharp:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1.MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{`0},System.Threading.CancellationToken)
    name: MapAsync
    isExternal: true
  - name: (
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
    name: ContentMappingContext
    isExternal: true
  - name: <
  - name: TContent
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingBase`1.MapAsync(Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext{`0},System.Threading.CancellationToken)
    name: MapAsync
    isExternal: true
  - name: (
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
    name: ContentMappingContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TContent
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
  commentId: T:Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
  isExternal: true
  name: ContentMappingContext<TContent>
  nameWithType: ContentMappingContext<TContent>
  fullName: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext<TContent>
  nameWithType.vb: ContentMappingContext(Of TContent)
  fullName.vb: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext(Of TContent)
  name.vb: ContentMappingContext(Of TContent)
  spec.csharp:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
    name: ContentMappingContext
    isExternal: true
  - name: <
  - name: TContent
  - name: '>'
  spec.vb:
  - uid: Tableau.Migration.Engine.Hooks.Mappings.ContentMappingContext`1
    name: ContentMappingContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TContent
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
